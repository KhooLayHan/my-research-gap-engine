'use client';

import React, { useEffect, useState } from "react";
import { useSearchParams } from "next/navigation"; // Hook to read URL parameters 

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

import ResearchTimelineChart from "@/components/custom/ResearchTimelineChart";
import RegionMapVisualization from "@/components/custom/RegionMapVisualization";
import PopulationHeatmap from "@/components/custom/PopulationHeatmap";
import SubtopicRadar from "@/components/custom/SubtopicRadar";
import WhatIsMissingPanel from "@/components/custom/WhatIsMissingPanel";

import { ResearchData } from "@/lib/types";

const ExplorerPage: React.FC = () => {
  const searchParams = useSearchParams();
  const topic = searchParams.get("topic") || "No Topic Provided";

  const [loading, setLoading] = useState(true);
  const [researchData, setResearchData] = useState<ResearchData | null>(null);
  const [error, setError] = useState<string | null>(null);

  // Mock data for demonstration purposes 
  const mockData: ResearchData = {
    query: topic,
    summary: `This is a summary for ${topic}. It explores the current state of research, highlighting its general scope and relevance in comtemporary studies. This summary is generated by an AI model based on real-time web search results.`,
    timeline: [
      { year: 2024, count: 5 },
      { year: 2023, count: 8 },
      { year: 2022, count: 10 },
      { year: 2021, count: 15 },
      { year: 2020, count: 18 }, // Start of drop in recent research activity
      { year: 2015, count: 35 },
      { year: 2010, count: 20 },
      { year: 2005, count: 12 },
      { year: 2000, count: 5 },
    ],
    regions: [
      { name: "North America", count: 80 },
      { name: 'Europe', count: 70 },
      { name: 'Asia (Excluding SEA)', count: 40 },
      { name: 'Southeast Asia', count: 5 }, // Low research
      { name: 'Africa', count: 3 }, // Very low research
      { name: 'South America', count: 7 },
      { name: 'Oceania', count: 10 },
    ],
    populations: [
      { name: 'Adults (25-64)', count: 90 },
      { name: 'Youth (13-24)', count: 30 },
      { name: 'Children (0-12)', count: 10 }, // Low research
      { name: 'Elderly (65+)', count: 5 }, // Very low research
      { name: 'Low-Income Groups', count: 8 },
      { name: 'Rural Communities', count: 12 },
    ],
    subtopics: [
      { name: 'Policy Implications', coverage: 75 },
      { name: 'Technological Solutions', coverage: 85 },
      { name: 'Social Impact', coverage: 60 },
      { name: 'Economic Factors', coverage: 40 }, // Moderate coverage
      { name: 'Ethical Considerations', coverage: 25 }, // Lower coverage
      { name: 'Long-term Forecasting', coverage: 15 }, // Very low coverage
    ],
    insights: [
    `Significant decline in research volume for "${topic}" post-2020.`,
    `Extremely limited studies found in **Africa** and **Southeast Asia** related to "${topic}".`,
    `Research on "${topic}" rarely focuses on **children** or the **elderly** demographics.`,
    `The **ethical considerations** and **long-term forecasting** aspects of "${topic}" appear to be severely under-researched.`,
    ],
    suggestedQuestions: [
      `What are the unique challenges and opportunities for "${topic}" research in **sub-Saharan Africa**?`,
      `How does "${topic}" specifically impact the **elderly population** in developing countries?`,
      `What are the **long-term societal implications** of current "${topic}" trends, and how can they be proactively addressed?`,
      `Investigate the effectiveness of community-based interventions for "${topic}" in **rural Southeast Asian** contexts.`,
      `Explore the **ethical frameworks** required for responsible development and deployment of solutions related to "${topic}".`,        
    ],
  };

  useEffect(() => {
    // TODO: Implement API call
    // fetch(`/api/search?topic=${encodeURIComponent(topic)}`)
    //   .then(res => res.json())
    //   .then(data => {
    //     setResearchData(data);
    //     setIsLoading(false);
    //   })
    //   .catch(err => {
    //     console.error('Error fetching data:', err);
    //     setError('Failed to load research data. Please try again.');
    //     setIsLoading(false);
    //   });

    // For now, we'll simulate loading with mock data
    const timer = setTimeout(() => {
      setResearchData(mockData);
      setLoading(false);
    }, 1500);

    return () => clearTimeout(timer);
  }, [topic]);
  
  if (loading) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <h1 className="text-3xl font-bold text-blue-600 mb-4">Analyzing Research Gaps...</h1>
        <p className="text-gray-600">This may take a few seconds, please wait while we gather insights for "{topic}".</p>
        {
          // TODO: Add a loading spinner
        }
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mt-8"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <h1 className="text-3xl font-bold text-red-600 mb-4">Error!</h1>
        <p className="text-gray-700">{error}</p>
        <p className="text-gray-500 mt-2">Please try again searching for a different topic.</p>
      </div>
    );
  }

  if (!researchData) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <h1 className="text-3xl font-bold text-gray-700 mb-4">No research data found for "{topic}".</h1>
        <p className="text-gray-600">Could not retrieve research data for "{topic}".</p>
      </div>
    );
  }

  return (
    <div className="container mx-auto p-4 md:px-8 max-w-6xl">
      <h1 className="text-4xl font-extrabold text-gray-900 mb-8 text-center">
        Research Gaps for: <span className="text-blue-600">{researchData.query}</span>
      </h1>

      { /* Queried Summary Section */ }
      <Card className="mb-8 shadow-lg rounded-lg">
        <CardHeader>
          <CardTitle className="text-2xl font-semibold text-gray-800">Topic Summary</CardTitle>
        </CardHeader>
        <CardContent>
          <p className="text-gray-700 loading-relaxed">{researchData.summary}</p>
        </CardContent>
      </Card>

      { /* Research Gap Visualization */ }
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8 mb-8">
        <ResearchTimelineChart data={researchData.timeline}/>
        <RegionMapVisualization data={researchData.regions}/>
        <PopulationHeatmap data={researchData.populations}/>
        <SubtopicRadar data={researchData.subtopics}/>
      </div>
      
      { /* What's Missing Panel */ }
      <div className="mb-8">
        <WhatIsMissingPanel 
          insights={researchData.insights}
          suggestedQuestions={researchData.suggestedQuestions}
        />
      </div>

      { /* Link to Insights/Suggested Questions  (Future) */ }
      <div className="text-center mt-12">
        <p className="text-gray-600">
          For more in-depth analysis and to generate additional suggested questions, visit the <a href="/insights" className="text-blue-600 hover:underline ml-1">Insights</a> page (Coming Soon).
        </p>
      </div>
    </div>
  );
}

export default ExplorerPage;